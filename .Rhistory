scale_fill_manual(values=c("#90ff82", "#0dbaff", "#fa6652")) +
xlab("Relative VOT") + ylab("Language") +
theme_bw() +
theme(panel.background = element_rect(fill = "grey79"),
legend.position = "bottom") + theme(legend.position = "none") +
ggtitle("Relative VOT per language in monolinguals") +
ggsave(here("slides", "images", "mono.png"))
# mono and bilingual comparison
comb_df %>%
ggplot(aes(x = relative_vot, y = group, fill = language)) +
geom_boxplot(outlier.size = 0) +
xlim(0, .3) +
scale_fill_manual(values=c("#90ff82", "#0dbaff", "#fa6652")) +
xlab("Relative VOT") + ylab("Group") +
theme_bw() +
theme(panel.background = element_rect(fill = "grey79"),
legend.position = "bottom") +
ggtitle("Relative VOT of each language per group") +
ggsave(here("slides", "images", "comb.png"))
p <- comb_df %>%
ggplot(aes(x = relative_vot, y = language, fill = language, shape = group)) +
geom_boxplot()
l1_df %>%
ggplot(aes(x = relative_vot, y = language)) +
geom_boxplot(fill = "deepskyblue4", color = "black", outlier.size = 0) +
xlim(0, .3) +
xlab("Xlab") + ylab("ylab") +
theme_bw() +
theme(panel.background = element_rect(fill = "grey79"),
legend.position = "bottom") + theme(legend.position = "none") + ggtitle("Title") +
ggsave(here("slides", "images", "l1_subset.png"))
# comb_df analysis
modn = lmer(relative_vot ~ 1 + (1 | participant), data = comb_df)
mod0 = lmer(relative_vot ~ group + (1 | participant), data = comb_df)
mod1 = lmer(relative_vot ~ group + language + (1 | participant), data = comb_df)
mod2 = lmer(relative_vot ~ group*language + (1 | participant), data = comb_df)
anova(modn, mod0, mod1, mod2)
summary(mod2)
mod2 %>%
write_rds(here("data", "models", "full_model_casp.rds"))
modn = lmer(relative_vot ~ 1 + (1 | participant), data = comb_df)
mod0 = lmer(relative_vot ~ group + (1 | participant), data = comb_df)
mod1 = lmer(relative_vot ~ group + language + (1 | participant), data = comb_df)
mod2 = lmer(relative_vot ~ group*language + (1 | participant), data = comb_df)
anova(modn, mod0, mod1, mod2)
modn = lmer(relative_vot ~ 1 + (1 | participant), data = comb_df)
mono_df %>%
ggplot(aes(x = relative_vot, y = language, fill = language)) +
geom_boxplot(color = "black", outlier.size = 0) +
xlim(0, .3) +
scale_fill_manual(values=c("#0dbaff", "#fa6652")) +
xlab("Relative VOT") + ylab("Language") +
theme_bw() +
theme(panel.background = element_rect(fill = "grey79"),
legend.position = "bottom") + theme(legend.position = "none") +
ggtitle("Relative VOT per language in monolinguals") +
ggsave(here("slides", "images", "mono.png"))
library(tidyverse)
library(here)
library(lme4)
l1_df <- read.csv(here::here("data", "tidy", "non_l2_subset.csv"))
l2_df <- read.csv(here::here("data", "tidy", "l2_subset.csv"))
tidy_df <- rbind(l1_df, l2_df) %>% mutate(group = "bilingual") %>%
select(participant, text, word, duration, vot, relative_vot, language, group)
mono_df <- read.csv(here("data", "tidy", "mono_df.csv")) %>%
mutate(group = "monolingual") %>%
select(participant, text, word, duration, vot, relative_vot, language, group)
comb_df <- rbind(tidy_df, mono_df)
# full dataset of bilingual participants
tidy_df %>%
ggplot(aes(x = relative_vot, y = language, fill = language)) +
geom_boxplot(color = "black", outlier.size = 0) +
xlim(0, .3) +
scale_fill_manual(values=c("#90ff82", "#0dbaff", "#fa6652"))  +
xlab("Relative VOT") + ylab("Language") +
theme_bw() +
theme(panel.background = element_rect(fill = "grey79"),
legend.position = "bottom") + theme(legend.position = "none") +
ggtitle("Relative VOT per language in bilinguals") +
ggsave(here("slides", "images", "full.png"))
# monolinguals
mono_df %>%
ggplot(aes(x = relative_vot, y = language, fill = language)) +
geom_boxplot(color = "black", outlier.size = 0) +
xlim(0, .3) +
scale_fill_manual(values=c("#0dbaff", "#fa6652")) +
xlab("Relative VOT") + ylab("Language") +
theme_bw() +
theme(panel.background = element_rect(fill = "grey79"),
legend.position = "bottom") + theme(legend.position = "none") +
ggtitle("Relative VOT per language in monolinguals") +
ggsave(here("slides", "images", "mono.png"))
# mono and bilingual comparison
comb_df %>%
ggplot(aes(x = relative_vot, y = group, fill = language)) +
geom_boxplot(outlier.size = 0) +
xlim(0, .3) +
scale_fill_manual(values=c("#90ff82", "#0dbaff", "#fa6652")) +
xlab("Relative VOT") + ylab("Group") +
theme_bw() +
theme(panel.background = element_rect(fill = "grey79"),
legend.position = "bottom") +
ggtitle("Relative VOT of each language per group") +
ggsave(here("slides", "images", "comb.png"))
l1_df %>%
ggplot(aes(x = relative_vot, y = language)) +
geom_boxplot(fill = "deepskyblue4", color = "black", outlier.size = 0) +
xlim(0, .3) +
xlab("Xlab") + ylab("ylab") +
theme_bw() +
theme(panel.background = element_rect(fill = "grey79"),
legend.position = "bottom") + theme(legend.position = "none") + ggtitle("Title") +
ggsave(here("slides", "images", "l1_subset.png"))
# comb_df analysis
modn = lmer(relative_vot ~ 1 + (1 | participant), data = comb_df)
mod0 = lmer(relative_vot ~ group + (1 | participant), data = comb_df)
mod1 = lmer(relative_vot ~ group + language + (1 | participant), data = comb_df)
mod2 = lmer(relative_vot ~ group*language + (1 | participant), data = comb_df)
anova(modn, mod0, mod1, mod2)
summary(mod2)
mod2 %>%
write_rds(here("data", "models", "full_model_casp.rds"))
l1_df %>%
ggplot(aes(x = relative_vot, y = group, fill = language))
View(l1_df)
l1_df %>%
ggplot(aes(x = relative_vot, y = group, fill = language))
l1_df %>%
ggplot(aes(x = relative_vot, y = language, fill = language))
l1_df %>%
ggplot(aes(x = relative_vot, y = language, fill = language)) +
geom_boxplot(outlier.size = 0)
l1_df %>%
ggplot(aes(x = relative_vot, y = language, fill = language)) +
geom_boxplot(outlier.size = 0) +
xlim(0, .3)
l1_df %>%
ggplot(aes(x = relative_vot, y = language, fill = language)) +
geom_boxplot(outlier.size = 0) +
xlim(0, .3) +
scale_fill_manual(values=c("#90ff82", "#0dbaff", "#fa6652"))
l1_df %>%
ggplot(aes(x = relative_vot, y = language, fill = language)) +
geom_boxplot(outlier.size = 0) +
xlim(0, .3) +
scale_fill_manual(values=c("#90ff82", "#0dbaff", "#fa6652")) +
xlab("Relative VOT") + ylab("Language")
l1_df %>%
ggplot(aes(x = relative_vot, y = language, fill = language)) +
geom_boxplot(outlier.size = 0) +
xlim(0, .3) +
scale_fill_manual(values=c("#90ff82", "#0dbaff", "#fa6652")) +
xlab("Relative VOT") + ylab("Language") +
theme_bw() +
theme(panel.background = element_rect(fill = "grey79"),
legend.position = "bottom")
l1_df %>%
ggplot(aes(x = relative_vot, y = language, fill = language)) +
geom_boxplot(outlier.size = 0) +
xlim(0, .3) +
scale_fill_manual(values=c("#90ff82", "#0dbaff", "#fa6652")) +
xlab("Relative VOT") + ylab("Language") +
theme_bw() +
theme(panel.background = element_rect(fill = "grey79"),
legend.position = "bottom") +
ggtitle("Relative VOT of each language in L1 subset") +
ggsave(here("slides", "images", "l1_subset.png"))
l2_df %>%
ggplot(aes(x = relative_vot, y = language, fill = language)) +
geom_boxplot(outlier.size = 0) +
xlim(0, .3) +
scale_fill_manual(values=c("#90ff82", "#0dbaff", "#fa6652")) +
xlab("Relative VOT") + ylab("Language") +
theme_bw() +
theme(panel.background = element_rect(fill = "grey79"),
legend.position = "bottom") +
ggtitle("Relative VOT of each language in L2 subset") +
ggsave(here("slides", "images", "l2_subset.png"))
l1_df_fr = l1_df %>%
filter(language == "french")
mono_df_fr = mono_df %>%
filter(language == "french")
TOSTER::TOSTtwo(m1 = l1_df_fr$relative_vot,
m2 = mono_df_fr$relative_vot,
sd1 = l1_df_fr$relative_vot,
sd2 = mono_df_fr$relative_vot,
n1 = nrow(l1_df_fr),
n2 = nrow(mono_df_fr),
low_eqbound_d = -.4,
high_eqbound_d = .4)
nrow(l1_df_fr)
nrow(mono_df_fr)
l1_df_fr$relative_vot
TOSTER::TOSTtwo(m1 = mean(l1_df_fr$relative_vot),
m2 = mean(mono_df_fr$relative_vot),
sd1 = sd(l1_df_fr$relative_vot),
sd2 = sd(mono_df_fr$relative_vot),
n1 = nrow(l1_df_fr),
n2 = nrow(mono_df_fr),
low_eqbound_d = -.4,
high_eqbound_d = .4)
unique(mono_df_fr$participant)
nrow(unique(mono_df_fr$participant))
obj <- unique(mono_df_fr$participant))
obj <- unique(mono_df_fr$participant)
obj <- unique(mono_df_fr$participant)
obj <- unique(mono_df_fr$participant)
obj <- unique(l1_df_fr$participant)
TOSTER::TOSTtwo(m1 = mean(l1_df_fr$relative_vot),
m2 = mean(mono_df_fr$relative_vot),
sd1 = sd(l1_df_fr$relative_vot),
sd2 = sd(mono_df_fr$relative_vot),
n1 = 16,
n2 = 18,
low_eqbound_d = -.4,
high_eqbound_d = .4)
mono_df <- read.csv(here("data", "tidy", "mono_df.csv")) %>%
mutate(group = "monolingual") %>%
select(participant, text, word, duration, vot, relative_vot, language, group)
mono_participants <- unique(mono_df$participant) %>% as.data.frame()
View(mono_participants)
nrow(mono_participants)
total_participants_q
library(tidyverse)
library(sjPlot)
library(here)
library(lme4)
participants <- read.csv(here::here("data", "tidy", "participant_count.csv"))
l2_df <- read.csv(here::here("data", "tidy", "l2_subset.csv"))
l1_df <- read.csv(here::here("data", "tidy", "non_l2_subset.csv"))
# load models
mod0 <- readRDS(here("data", "models", "full_model.RDS"))
mod_casp <- readRDS(here("data", "models", "full_model_casp.rds"))
l1_mod <- read_rds(here("data", "models", "l1_sub_model.RDS"))
l2_mod <- read_rds(here("data", "models", "l2_sub_model.RDS"))
all_desc_df <- read.csv(here("data", "tidy", "all_desc.csv"))
stim_df <- read.csv(here("data", "tidy", "stim.csv"))
total_participants <- sum(participants$l2_subset_no, participants$non_l2_no, participants$dqed_no)
total_participants_q <- sum(participants$l2_subset_no, participants$non_l2_no)
mono_df <- read.csv(here("data", "tidy", "mono_df.csv")) %>%
mutate(group = "monolingual") %>%
select(participant, text, word, duration, vot, relative_vot, language, group)
tidy_df <- rbind(l1_df, l2_df) %>% mutate(group = "bilingual") %>%
select(participant, text, word, duration, vot, relative_vot, language, group)
mono_participants <- unique(mono_df$participant) %>% as.data.frame()
comb_df <- rbind(tidy_df, mono_df)
source(here::here("scripts", "07_small_data.R"))
tab_model(mod_casp)
comb_df %>%
group_by(language, text) %>%
summarise(`Relative VOT` = mean(relative_vot), `SD` = sd(relative_vot)) %>%
filter(text == "k") %>%
knitr::kable(digits = 3)
mono_df %>%
group_by(language, text) %>%
summarise(`Relative VOT` = mean(relative_vot), `SD` = sd(relative_vot)) %>%
filter(text == "t") %>%
knitr::kable(digits = 3)
View(mono_df)
knitr::opts_chunk$set(message = FALSE, warning = FALSE, echo = FALSE, dpi = 300)
library(tidyverse)
library(sjPlot)
library(here)
library(lme4)
participants <- read.csv(here::here("data", "tidy", "participant_count.csv"))
l2_df <- read.csv(here::here("data", "tidy", "l2_subset.csv"))
l1_df <- read.csv(here::here("data", "tidy", "non_l2_subset.csv"))
# load models
mod0 <- readRDS(here("data", "models", "full_model.RDS"))
mod_casp <- readRDS(here("data", "models", "full_model_casp.rds"))
l1_mod <- read_rds(here("data", "models", "l1_sub_model.RDS"))
l2_mod <- read_rds(here("data", "models", "l2_sub_model.RDS"))
all_desc_df <- read.csv(here("data", "tidy", "all_desc.csv"))
stim_df <- read.csv(here("data", "tidy", "stim.csv"))
total_participants <- sum(participants$l2_subset_no, participants$non_l2_no, participants$dqed_no)
total_participants_q <- sum(participants$l2_subset_no, participants$non_l2_no)
mono_df <- read.csv(here("data", "tidy", "mono_df.csv")) %>%
mutate(group = "monolingual") %>%
select(participant, text, word, duration, vot, relative_vot, language, group)
tidy_df <- rbind(l1_df, l2_df) %>% mutate(group = "bilingual") %>%
select(participant, text, word, duration, vot, relative_vot, language, group)
mono_participants <- unique(mono_df$participant) %>% as.data.frame()
comb_df <- rbind(tidy_df, mono_df)
source(here::here("scripts", "07_small_data.R"))
mono_df <- read.csv(here("data", "tidy", "mono_df.csv")) %>%
mutate(group = "monolingual") %>%
select(participant, text, word, duration, vot, relative_vot, language, group)
library(tidyverse)
library(here)
library(lme4)
l1_df <- read.csv(here::here("data", "tidy", "non_l2_subset.csv"))
l2_df <- read.csv(here::here("data", "tidy", "l2_subset.csv"))
tidy_df <- rbind(l1_df, l2_df) %>% mutate(group = "bilingual") %>%
select(participant, text, word, duration, vot, relative_vot, language, group)
mono_df <- read.csv(here("data", "tidy", "mono_df.csv")) %>%
mutate(group = "monolingual") %>%
select(participant, text, word, duration, vot, relative_vot, language, group)
comb_df <- rbind(tidy_df, mono_df)
# full dataset of bilingual participants
tidy_df %>%
ggplot(aes(x = relative_vot, y = language, fill = language)) +
geom_boxplot(color = "black", outlier.size = 0) +
xlim(0, .3) +
scale_fill_manual(values=c("#90ff82", "#0dbaff", "#fa6652"))  +
xlab("Relative VOT") + ylab("Language") +
theme_bw() +
theme(panel.background = element_rect(fill = "grey79"),
legend.position = "bottom") + theme(legend.position = "none") +
ggtitle("Relative VOT per language in bilinguals") +
ggsave(here("slides", "images", "full.png"))
# monolinguals
mono_df %>%
ggplot(aes(x = relative_vot, y = language, fill = language)) +
geom_boxplot(color = "black", outlier.size = 0) +
xlim(0, .3) +
scale_fill_manual(values=c("#0dbaff", "#fa6652")) +
xlab("Relative VOT") + ylab("Language") +
theme_bw() +
theme(panel.background = element_rect(fill = "grey79"),
legend.position = "none") +
ggtitle("Relative VOT per language in monolinguals") +
ggsave(here("slides", "images", "mono.png"))
# mono and bilingual comparison
comb_df %>%
ggplot(aes(x = relative_vot, y = group, fill = language)) +
geom_boxplot(outlier.size = 0) +
xlim(0, .3) +
scale_fill_manual(values=c("#90ff82", "#0dbaff", "#fa6652")) +
xlab("Relative VOT") + ylab("Group") +
theme_bw() +
theme(panel.background = element_rect(fill = "grey79"),
legend.position = "none") +
ggtitle("Relative VOT of each language per group") +
ggsave(here("slides", "images", "comb.png"))
l1_df %>%
ggplot(aes(x = relative_vot, y = language, fill = language)) +
geom_boxplot(outlier.size = 0) +
xlim(0, .3) +
scale_fill_manual(values=c("#90ff82", "#0dbaff", "#fa6652")) +
xlab("Relative VOT") + ylab("Language") +
theme_bw() +
theme(panel.background = element_rect(fill = "grey79"),
legend.position = "none") +
ggtitle("Relative VOT of each language in L1 subset") +
ggsave(here("slides", "images", "l1_subset.png"))
l2_df %>%
ggplot(aes(x = relative_vot, y = language, fill = language)) +
geom_boxplot(outlier.size = 0) +
xlim(0, .3) +
scale_fill_manual(values=c("#90ff82", "#0dbaff", "#fa6652")) +
xlab("Relative VOT") + ylab("Language") +
theme_bw() +
theme(panel.background = element_rect(fill = "grey79"),
legend.position = "bottom") +
ggtitle("Relative VOT of each language in L2 subset") +
ggsave(here("slides", "images", "l2_subset.png"))
# comb_df analysis
modn = lmer(relative_vot ~ 1 + (1 | participant), data = comb_df)
mod0 = lmer(relative_vot ~ group + (1 | participant), data = comb_df)
mod1 = lmer(relative_vot ~ group + language + (1 | participant), data = comb_df)
mod2 = lmer(relative_vot ~ group*language + (1 | participant), data = comb_df)
anova(modn, mod0, mod1, mod2)
summary(mod2)
mod2 %>%
write_rds(here("data", "models", "full_model_casp.rds"))
# are the L1 subset French and monolingual subset production equivalent?
l1_df_fr = l1_df %>%
filter(language == "french")
mono_df_fr = mono_df %>%
filter(language == "french")
TOSTER::TOSTtwo(m1 = mean(l1_df_fr$relative_vot),
m2 = mean(mono_df_fr$relative_vot),
sd1 = sd(l1_df_fr$relative_vot),
sd2 = sd(mono_df_fr$relative_vot),
n1 = nrow(l1_df_fr),
n2 = nrow(mono_df_fr),
low_eqbound_d = -.4,
high_eqbound_d = .4)
View(tidy_df)
full_fr_sub <- tidy_df %>%
filter(language == "french")
full_en_sub <- tidy_df %>%
filter(language == "english")
# TOST to see whether a subset of participants are practically equivalent with
# eng and french
TOSTER::TOSTtwo(n1 = length(unique(full_fr_sub$participant)),
n2 = length(unique(full_en_sub$participant)),
m1 = mean(full_en_sub$relative_vot),
m2 = mean(full_fr_sub$relative_vot),
sd1 = sd(l2_subset_df_fr$relative_vot),
sd2 = sd(full_en_sub$relative_vot),
low_eqbound_d = -.4,
high_eqbound_d = .4)
full_fr_sub <- tidy_df %>%
filter(language == "french")
full_en_sub <- tidy_df %>%
filter(language == "english")
# TOST to see whether a subset of participants are practically equivalent with
# eng and french
TOSTER::TOSTtwo(n1 = length(unique(full_fr_sub$participant)),
n2 = length(unique(full_en_sub$participant)),
m1 = mean(full_en_sub$relative_vot),
m2 = mean(full_fr_sub$relative_vot),
sd1 = sd(full_fr_sub$relative_vot),
sd2 = sd(full_en_sub$relative_vot),
low_eqbound_d = -.4,
high_eqbound_d = .4)
library(tidyverse)
library(here)
library(lme4)
l1_df <- read.csv(here::here("data", "tidy", "non_l2_subset.csv"))
l2_df <- read.csv(here::here("data", "tidy", "l2_subset.csv"))
tidy_df <- rbind(l1_df, l2_df) %>% mutate(group = "bilingual") %>%
select(participant, text, word, duration, vot, relative_vot, language, group)
mono_df <- read.csv(here("data", "tidy", "mono_df.csv")) %>%
mutate(group = "monolingual") %>%
select(participant, text, word, duration, vot, relative_vot, language, group)
comb_df <- rbind(tidy_df, mono_df)
# full dataset of bilingual participants
tidy_df %>%
ggplot(aes(x = relative_vot, y = language, fill = language)) +
geom_boxplot(color = "black", outlier.size = 0) +
xlim(0, .3) +
scale_fill_manual(values=c("#90ff82", "#0dbaff", "#fa6652"))  +
xlab("Relative VOT") + ylab("Language") +
theme_bw() +
theme(panel.background = element_rect(fill = "grey79"),
legend.position = "bottom") + theme(legend.position = "none") +
ggtitle("Relative VOT per language in bilinguals") +
ggsave(here("slides", "images", "full.png"))
# monolinguals
mono_df %>%
ggplot(aes(x = relative_vot, y = language, fill = language)) +
geom_boxplot(color = "black", outlier.size = 0) +
xlim(0, .3) +
scale_fill_manual(values=c("#0dbaff", "#fa6652")) +
xlab("Relative VOT") + ylab("Language") +
theme_bw() +
theme(panel.background = element_rect(fill = "grey79"),
legend.position = "none") +
ggtitle("Relative VOT per language in monolinguals") +
ggsave(here("slides", "images", "mono.png"))
# mono and bilingual comparison
comb_df %>%
ggplot(aes(x = relative_vot, y = group, fill = language)) +
geom_boxplot(outlier.size = 0) +
xlim(0, .3) +
scale_fill_manual(values=c("#90ff82", "#0dbaff", "#fa6652")) +
xlab("Relative VOT") + ylab("Group") +
theme_bw() +
theme(panel.background = element_rect(fill = "grey79"),
legend.position = "none") +
ggtitle("Relative VOT of each language per group") +
ggsave(here("slides", "images", "comb.png"))
l1_df %>%
ggplot(aes(x = relative_vot, y = language, fill = language)) +
geom_boxplot(outlier.size = 0) +
xlim(0, .3) +
scale_fill_manual(values=c("#90ff82", "#0dbaff", "#fa6652")) +
xlab("Relative VOT") + ylab("Language") +
theme_bw() +
theme(panel.background = element_rect(fill = "grey79"),
legend.position = "none") +
ggtitle("Relative VOT of each language in L1 subset") +
ggsave(here("slides", "images", "l1_subset.png"))
l2_df %>%
ggplot(aes(x = relative_vot, y = language, fill = language)) +
geom_boxplot(outlier.size = 0) +
xlim(0, .3) +
scale_fill_manual(values=c("#90ff82", "#0dbaff", "#fa6652")) +
xlab("Relative VOT") + ylab("Language") +
theme_bw() +
theme(panel.background = element_rect(fill = "grey79"),
legend.position = "none") +
ggtitle("Relative VOT of each language in L2 subset") +
ggsave(here("slides", "images", "l2_subset.png"))
# comb_df analysis
modn = lmer(relative_vot ~ 1 + (1 | participant), data = comb_df)
mod0 = lmer(relative_vot ~ group + (1 | participant), data = comb_df)
mod1 = lmer(relative_vot ~ group + language + (1 | participant), data = comb_df)
mod2 = lmer(relative_vot ~ group*language + (1 | participant), data = comb_df)
anova(modn, mod0, mod1, mod2)
summary(mod2)
mod2 %>%
write_rds(here("data", "models", "full_model_casp.rds"))
# are the L1 subset French and monolingual subset production equivalent?
l1_df_fr = l1_df %>%
filter(language == "french")
mono_df_fr = mono_df %>%
filter(language == "french")
TOSTER::TOSTtwo(m1 = mean(l1_df_fr$relative_vot),
m2 = mean(mono_df_fr$relative_vot),
sd1 = sd(l1_df_fr$relative_vot),
sd2 = sd(mono_df_fr$relative_vot),
n1 = nrow(l1_df_fr),
n2 = nrow(mono_df_fr),
low_eqbound_d = -.4,
high_eqbound_d = .4)
View(modn)
debugSource('~/Documents/GitHub/l3_production_study/scripts/11_casplap_plots.R', echo=TRUE)
comb_df %>%
ggplot(aes(x = relative_vot, y = group, fill = language)) +
geom_boxplot(outlier.size = 0) +
xlim(0, .3) +
scale_fill_manual(values=c("#90ff82", "#0dbaff", "#fa6652")) +
xlab("Relative VOT") + ylab("Group") +
theme_bw() +
theme(panel.background = element_rect(fill = "grey79"),
legend.position = "bottom") +
ggtitle("Relative VOT of each language per group") +
ggsave(here("slides", "images", "comb.png"))
View(mono_df_fr)
