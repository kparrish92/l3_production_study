}
View(power_df_per_size)
span_mod_p <- brm(
vot ~ 1, data = sample_df,
warmup = 1000, iter = 2000, chains = 4, cores = 4)
p_fixef = fixef(span_mod_p) %>%
as.data.frame()
span_df_p %>%
ggplot(aes(y = vot, x = text)) +
geom_point(position = position_dodge(width = .5)) +
geom_pointrange(aes(y = p_fixef$Estimate,
ymax = p_fixef$Q97.5,
ymin = p_fixef$Q2.5), color = "blue")
View(p_fixef)
sample_df = span_df_p %>%
sample_n(sizes[thisSize])
thisSize = 3
sample_df = span_df_p %>%
sample_n(sizes[thisSize])
sizes[thisSize]
# Fit model to get credible interval for plotting
span_df_p = all_df %>% filter(language == "spanish") %>%
filter(text == "p")
span_mod_p <- brm(
vot ~ 1, data = sample_df,
warmup = 1000, iter = 2000, chains = 4, cores = 4)
mcmc_plot(span_mod_p)
p_fixef = fixef(span_mod_p) %>%
as.data.frame()
span_df_p %>%
ggplot(aes(y = vot, x = text)) +
geom_point(position = position_dodge(width = .5)) +
geom_pointrange(aes(y = p_fixef$Estimate,
ymax = p_fixef$Q97.5,
ymin = p_fixef$Q2.5), color = "blue")
View(p_fixef)
View(power_df)
k = 100
power_df = matrix(nrow = k, ncol = 2)
power_df_per_size = matrix(nrow = 7, ncol = 5)
sizes = c(3,5,8,10,12,15,20)
for(thisSize in 1:nrow(power_df_per_size)){
for (thisRun in 1:k) {
sample_df = span_df_p %>%
sample_n(sizes[thisSize])
t_df = t.test(sample_df$vot, span_df_p$vot)
power_df[thisRun, 1] = t_df$p.value
power_df[thisRun, 2] = mean(sample_df$vot)
}
power_df_per_size[thisSize, 1] = sizes[thisSize]
power_df_per_size[thisSize, 2] = sum(power_df[,1] < .05)
power_df_per_size[thisSize, 3] = mean(power_df[,2])
power_df_per_size[thisSize, 4] = min(power_df[,2])
power_df_per_size[thisSize, 5] = max(power_df[,2])
}
View(power_df_per_size)
k = 1000
power_df = matrix(nrow = k, ncol = 2)
power_df_per_size = matrix(nrow = 7, ncol = 5)
sizes = c(3,5,8,10,12,15,20)
for(thisSize in 1:nrow(power_df_per_size)){
for (thisRun in 1:k) {
sample_df = span_df_p %>%
sample_n(sizes[thisSize])
t_df = t.test(sample_df$vot, span_df_p$vot)
power_df[thisRun, 1] = t_df$p.value
power_df[thisRun, 2] = mean(sample_df$vot)
}
power_df_per_size[thisSize, 1] = sizes[thisSize]
power_df_per_size[thisSize, 2] = sum(power_df[,1] < .05)
power_df_per_size[thisSize, 3] = mean(power_df[,2])
power_df_per_size[thisSize, 4] = min(power_df[,2])
power_df_per_size[thisSize, 5] = max(power_df[,2])
}
View(power_df_per_size)
power_df_per_size %>%
as.data.frame()
library(tidyverse)
library(here)
library(brms)
l2_df <- read.csv(here::here("data", "tidy", "l2_subset.csv"))
l1_df <- read.csv(here::here("data", "tidy", "non_l2_subset.csv"))
all_df <- rbind(l1_df, l2_df)
all_df %>%
group_by(text, language) %>%
summarize(mean_vot = mean(vot),
sd_vot = sd(vot),
min_vot = min(vot),
max_vot = max(vot))
# Fit model to get credible interval for plotting
span_df_p = all_df %>% filter(language == "spanish") %>%
filter(text == "p")
#span_mod_p <- brm(
#  vot ~ 1, data = sample_df,
#  warmup = 1000, iter = 2000, chains = 4, cores = 4)
#mcmc_plot(span_mod_p)
#p_fixef = fixef(span_mod_p) %>%
#  as.data.frame()
#span_df_p %>%
#  ggplot(aes(y = vot, x = text)) +
#  geom_point(position = position_dodge(width = .5)) +
#  geom_pointrange(aes(y = p_fixef$Estimate,
#                      ymax = p_fixef$Q97.5,
#                      ymin = p_fixef$Q2.5), color = "blue")
k = 1000
power_df = matrix(nrow = k, ncol = 2)
power_df_per_size = matrix(nrow = 7, ncol = 5)
sizes = c(3,5,8,10,12,15,20)
for(thisSize in 1:nrow(power_df_per_size)){
for (thisRun in 1:k) {
sample_df = span_df_p %>%
sample_n(sizes[thisSize])
t_df = t.test(sample_df$vot_ms, span_df_p$vot_ms)
power_df[thisRun, 1] = t_df$p.value
power_df[thisRun, 2] = mean(sample_df$vot_ms)
}
power_df_per_size[thisSize, 1] = sizes[thisSize]
power_df_per_size[thisSize, 2] = sum(power_df[,1] < .05)
power_df_per_size[thisSize, 3] = mean(power_df[,2])
power_df_per_size[thisSize, 4] = min(power_df[,2])
power_df_per_size[thisSize, 5] = max(power_df[,2])
}
power_df_per_size %>%
as.data.frame()
power_df_per_size %>%
as.data.frame() %>%
rename(V1 = "Samples")
power_df_per_size %>%
as.data.frame() %>%
rename("Samples" = V1)
power_df_per_size %>%
as.data.frame() %>%
rename("samples" = V1) %>%
rename("power" = V2) %>%
rename("mean" = V3) %>%
rename("min" = V4) %>%
rename("max" = V5)
mean(span_df_p)
mean(span_df_p$vot_ms)
library(tidyverse)
library(here)
library(brms)
l2_df <- read.csv(here::here("data", "tidy", "l2_subset.csv"))
l1_df <- read.csv(here::here("data", "tidy", "non_l2_subset.csv"))
all_df <- rbind(l1_df, l2_df)
all_df %>%
group_by(text, language) %>%
summarize(mean_vot = mean(vot),
sd_vot = sd(vot),
min_vot = min(vot),
max_vot = max(vot))
# Fit model to get credible interval for plotting
span_df_p = all_df %>% filter(language == "spanish") %>%
filter(text == "p")
#span_mod_p <- brm(
#  vot ~ 1, data = sample_df,
#  warmup = 1000, iter = 2000, chains = 4, cores = 4)
#mcmc_plot(span_mod_p)
#p_fixef = fixef(span_mod_p) %>%
#  as.data.frame()
#span_df_p %>%
#  ggplot(aes(y = vot, x = text)) +
#  geom_point(position = position_dodge(width = .5)) +
#  geom_pointrange(aes(y = p_fixef$Estimate,
#                      ymax = p_fixef$Q97.5,
#                      ymin = p_fixef$Q2.5), color = "blue")
k = 1000
power_df = matrix(nrow = k, ncol = 2)
power_df_per_size = matrix(nrow = 9, ncol = 5)
sizes = c(3,5,8,10,12,15,20,25,80)
for(thisSize in 1:nrow(power_df_per_size)){
for (thisRun in 1:k) {
sample_df = span_df_p %>%
sample_n(sizes[thisSize])
t_df = t.test(sample_df$vot_ms, span_df_p$vot_ms)
power_df[thisRun, 1] = t_df$p.value
power_df[thisRun, 2] = mean(sample_df$vot_ms)
}
power_df_per_size[thisSize, 1] = sizes[thisSize]
power_df_per_size[thisSize, 2] = sum(power_df[,1] < .05)
power_df_per_size[thisSize, 3] = mean(power_df[,2])
power_df_per_size[thisSize, 4] = min(power_df[,2])
power_df_per_size[thisSize, 5] = max(power_df[,2])
}
power_df_per_size %>%
as.data.frame() %>%
rename("samples" = V1) %>%
rename("power" = V2) %>%
rename("mean" = V3) %>%
rename("min" = V4) %>%
rename("max" = V5)
mean(span_df_p$vot_ms)
sizes = c(3,5,8,10,12,
15,20,25,30,
40,50,80)
k = 1000
power_df = matrix(nrow = k, ncol = 2)
power_df_per_size = matrix(nrow = 12, ncol = 5)
sizes = c(3,5,8,10,12,
15,20,25,30,
40,50,80)
for(thisSize in 1:nrow(power_df_per_size)){
for (thisRun in 1:k) {
sample_df = span_df_p %>%
sample_n(sizes[thisSize])
t_df = t.test(sample_df$vot_ms, span_df_p$vot_ms)
power_df[thisRun, 1] = t_df$p.value
power_df[thisRun, 2] = mean(sample_df$vot_ms)
}
power_df_per_size[thisSize, 1] = sizes[thisSize]
power_df_per_size[thisSize, 2] = sum(power_df[,1] < .05)
power_df_per_size[thisSize, 3] = mean(power_df[,2])
power_df_per_size[thisSize, 4] = min(power_df[,2])
power_df_per_size[thisSize, 5] = max(power_df[,2])
}
power_df_per_size %>%
as.data.frame() %>%
rename("samples" = V1) %>%
rename("power" = V2) %>%
rename("mean" = V3) %>%
rename("min" = V4) %>%
rename("max" = V5)
mean(span_df_p$vot_ms)
plot_df = power_df_per_size %>%
as.data.frame() %>%
rename("samples" = V1) %>%
rename("power" = V2) %>%
rename("mean" = V3) %>%
rename("min" = V4) %>%
rename("max" = V5)
plot_df %>%
ggplot(aes(x = samples, y = mean, color = power))
plot_df %>%
ggplot(aes(x = samples, y = mean, color = power)) +
geom_pointrange(xmin = min, xmax = max)
plot_df %>%
ggplot(aes(x = samples, y = mean, color = power)) +
geom_pointrange(xmin = min, xmax = max)
plot_df = power_df_per_size %>%
as.data.frame() %>%
rename("samples" = V1) %>%
rename("power" = V2) %>%
rename("mean" = V3) %>%
rename("min_mean" = V4) %>%
rename("max_mean" = V5)
mean(span_df_p$vot_ms)
plot_df %>%
ggplot(aes(x = samples, y = mean, color = power)) +
geom_pointrange(xmin = min_mean, xmax = max_mean)
plot_df %>%
ggplot(aes(x = samples, y = mean, color = power)) +
geom_pointrange(ymin = min_mean, ymax = max_mean)
plot_df %>%
ggplot(aes(x = samples, y = mean, color = power)) +
geom_pointrange(aes(ymin = min_mean, ymax = max_mean))
plot_df %>%
ggplot(aes(x = as.factor(samples), y = mean, color = power)) +
geom_pointrange(aes(ymin = min_mean, ymax = max_mean))
mean(span_df_p$vot_ms)
range(span_df_p$vot_ms)
View(plot_df)
dataframe = all_df
segment = "p"
iterations = 1000
power_df_per_size %>%
as.data.frame() %>%
rename("samples" = V1) %>%
rename("power" = V2) %>%
rename("mean" = V3) %>%
rename("min_mean" = V4) %>%
rename("max_mean" = V5)
vot_tokens_needed = function(dataframe, segment, iterations)
{
span_df_p = df %>% filter(language == "spanish") %>%
filter(text == "p")
k = 1000
power_df = matrix(nrow = k, ncol = 2)
power_df_per_size = matrix(nrow = 12, ncol = 5)
sizes = c(3,5,8,10,12,
15,20,25,30,
40,50,80)
for(thisSize in 1:nrow(power_df_per_size)){
for (thisRun in 1:k) {
sample_df = span_df_p %>%
sample_n(sizes[thisSize])
t_df = t.test(sample_df$vot_ms, span_df_p$vot_ms)
power_df[thisRun, 1] = t_df$p.value
power_df[thisRun, 2] = mean(sample_df$vot_ms)
}
power_df_per_size[thisSize, 1] = sizes[thisSize]
power_df_per_size[thisSize, 2] = sum(power_df[,1] < .05)
power_df_per_size[thisSize, 3] = mean(power_df[,2])
power_df_per_size[thisSize, 4] = min(power_df[,2])
power_df_per_size[thisSize, 5] = max(power_df[,2])
}
plot_df = power_df_per_size %>%
as.data.frame() %>%
rename("samples" = V1) %>%
rename("power" = V2) %>%
rename("mean" = V3) %>%
rename("min_mean" = V4) %>%
rename("max_mean" = V5)
return(plot_df)
}
vot_tokens_needed(dataframe, segment, iterations)
dataframe = all_df
segment = "p"
iterations = 1000
vot_tokens_needed(dataframe, segment, iterations)
span_df_p = df %>% filter(language == "spanish") %>%
filter(text == "p")
vot_tokens_needed = function(dataframe, segment, iterations)
{
span_df_p = dataframe %>% filter(language == "spanish") %>%
filter(text == "p")
k = 1000
power_df = matrix(nrow = k, ncol = 2)
power_df_per_size = matrix(nrow = 12, ncol = 5)
sizes = c(3,5,8,10,12,
15,20,25,30,
40,50,80)
for(thisSize in 1:nrow(power_df_per_size)){
for (thisRun in 1:k) {
sample_df = span_df_p %>%
sample_n(sizes[thisSize])
t_df = t.test(sample_df$vot_ms, span_df_p$vot_ms)
power_df[thisRun, 1] = t_df$p.value
power_df[thisRun, 2] = mean(sample_df$vot_ms)
}
power_df_per_size[thisSize, 1] = sizes[thisSize]
power_df_per_size[thisSize, 2] = sum(power_df[,1] < .05)
power_df_per_size[thisSize, 3] = mean(power_df[,2])
power_df_per_size[thisSize, 4] = min(power_df[,2])
power_df_per_size[thisSize, 5] = max(power_df[,2])
}
plot_df = power_df_per_size %>%
as.data.frame() %>%
rename("samples" = V1) %>%
rename("power" = V2) %>%
rename("mean" = V3) %>%
rename("min_mean" = V4) %>%
rename("max_mean" = V5)
return(plot_df)
}
vot_tokens_needed(dataframe, segment, iterations)
vot_tokens_needed = function(dataframe, segment, iterations)
{
span_df_p = dataframe %>% filter(language == "spanish") %>%
filter(text == segment)
#set.seed()
k = iterations
power_df = matrix(nrow = k, ncol = 2)
power_df_per_size = matrix(nrow = 12, ncol = 5)
sizes = c(3,5,8,10,12,
15,20,25,30,
40,50,80)
for(thisSize in 1:nrow(power_df_per_size)){
for (thisRun in 1:k) {
sample_df = span_df_p %>%
sample_n(sizes[thisSize])
t_df = t.test(sample_df$vot_ms, span_df_p$vot_ms)
power_df[thisRun, 1] = t_df$p.value
power_df[thisRun, 2] = mean(sample_df$vot_ms)
}
power_df_per_size[thisSize, 1] = sizes[thisSize]
power_df_per_size[thisSize, 2] = sum(power_df[,1] < .05)
power_df_per_size[thisSize, 3] = mean(power_df[,2])
power_df_per_size[thisSize, 4] = min(power_df[,2])
power_df_per_size[thisSize, 5] = max(power_df[,2])
}
plot_df = power_df_per_size %>%
as.data.frame() %>%
rename("samples" = V1) %>%
rename("power" = V2) %>%
rename("mean" = V3) %>%
rename("min_mean" = V4) %>%
rename("max_mean" = V5)
return(plot_df)
}
vot_tokens_needed(dataframe, segment, iterations)
vot_tokens_needed(all_df, "p", 1000)
span_df = all_df %>% filter(language == "spanish")
p_df = vot_tokens_needed(span_df, "p", 1000) %>%
mutate(segment = "p")
View(p_df)
k_df = vot_tokens_needed(all_df, "k", 1000) %>%
mutate(segment = "k")
t_df = vot_tokens_needed(all_df, "t", 1000) %>%
mutate(segment = "t")
View(t_df)
View(k_df)
plot_df %>%
ggplot(aes(x = as.factor(samples), y = mean, color = power)) +
geom_pointrange(aes(ymin = min_mean, ymax = max_mean))
all_df %>%
group_by(text, language) %>%
summarize(mean_vot = mean(vot),
sd_vot = sd(vot),
min_vot = min(vot),
max_vot = max(vot))
plot_df_all = rbind(p_df, t_df, k_df)
plot_df_all %>%
ggplot(aes(x = as.factor(samples), y = mean, color = power)) +
geom_pointrange(aes(ymin = min_mean, ymax = max_mean))
plot_df_all %>%
ggplot(aes(x = as.factor(samples), y = mean, color = power)) +
geom_pointrange(aes(ymin = min_mean, ymax = max_mean)) +
facet_wrap(~segment)
View(plot_df_all)
plot_df_all = rbind(p_df, t_df, k_df) %>%
mutate(power_color = case_when(power < 20 ~ 1),
power_color = case_when(power > 20 ~ 0))
View(plot_df_all)
plot_df_all = rbind(p_df, t_df, k_df) %>%
mutate(power_color = case_when(power < 20 ~ 1,
power > 20 ~ 0))
View(plot_df_all)
plot_df_all = rbind(p_df, t_df, k_df) %>%
mutate(power_color = case_when(power =< 20 ~ 1,
power > 20 ~ 0))
plot_df_all = rbind(p_df, t_df, k_df) %>%
mutate(power_color = case_when(power <= 20 ~ 1,
power > 20 ~ 0))
View(plot_df_all)
plot_df_all %>%
ggplot(aes(x = as.factor(samples), y = mean, color = power_color)) +
geom_pointrange(aes(ymin = min_mean, ymax = max_mean)) +
facet_wrap(~segment)
plot_df_all %>%
ggplot(aes(x = as.factor(samples), y = mean, color = as.factor(power_color))) +
geom_pointrange(aes(ymin = min_mean, ymax = max_mean)) +
facet_wrap(~segment)
plot_df_all %>%
ggplot(aes(x = as.factor(samples), y = mean, color = as.factor(power_color))) +
geom_pointrange(aes(ymin = min_mean, ymax = max_mean)) +
facet_wrap(~segment) + ggtitle("Spanish VOT per group")
plot_df_all %>%
ggplot(aes(x = as.factor(samples), y = mean, color = as.factor(power_color))) +
geom_pointrange(aes(ymin = min_mean, ymax = max_mean)) +
facet_wrap(~segment) + ggtitle("Spanish VOT per segment by L1 speakers")
p_df = vot_tokens_needed(span_df, "p", 1000) %>%
mutate(segment = "p")
k_df = vot_tokens_needed(span_df, "k", 1000) %>%
mutate(segment = "k")
t_df = vot_tokens_needed(span_df, "t", 1000) %>%
mutate(segment = "t")
plot_df_all = rbind(p_df, t_df, k_df) %>%
mutate(power_color = case_when(power <= 20 ~ 1,
power > 20 ~ 0))
all_df %>%
group_by(text, language) %>%
summarize(mean_vot = mean(vot),
sd_vot = sd(vot),
min_vot = min(vot),
max_vot = max(vot))
plot_df_all %>%
ggplot(aes(x = as.factor(samples), y = mean, color = as.factor(power_color))) +
geom_pointrange(aes(ymin = min_mean, ymax = max_mean)) +
facet_wrap(~segment) + ggtitle("Spanish VOT per segment by L1 speakers")
vot_tokens_needed = function(dataframe, segment, iterations)
{
span_df_p = dataframe %>% filter(language == "english") %>%
filter(text == segment)
#set.seed()
k = iterations
power_df = matrix(nrow = k, ncol = 2)
power_df_per_size = matrix(nrow = 12, ncol = 5)
sizes = c(3,5,8,10,12,
15,20,25,30,
40,50,80)
for(thisSize in 1:nrow(power_df_per_size)){
for (thisRun in 1:k) {
sample_df = span_df_p %>%
sample_n(sizes[thisSize])
t_df = t.test(sample_df$vot_ms, span_df_p$vot_ms)
power_df[thisRun, 1] = t_df$p.value
power_df[thisRun, 2] = mean(sample_df$vot_ms)
}
power_df_per_size[thisSize, 1] = sizes[thisSize]
power_df_per_size[thisSize, 2] = sum(power_df[,1] < .05)
power_df_per_size[thisSize, 3] = mean(power_df[,2])
power_df_per_size[thisSize, 4] = min(power_df[,2])
power_df_per_size[thisSize, 5] = max(power_df[,2])
}
plot_df = power_df_per_size %>%
as.data.frame() %>%
rename("samples" = V1) %>%
rename("power" = V2) %>%
rename("mean" = V3) %>%
rename("min_mean" = V4) %>%
rename("max_mean" = V5)
return(plot_df)
}
p_df = vot_tokens_needed(span_df, "p", 1000) %>%
mutate(segment = "p")
k_df = vot_tokens_needed(span_df, "k", 1000) %>%
mutate(segment = "k")
t_df = vot_tokens_needed(span_df, "t", 1000) %>%
mutate(segment = "t")
plot_df_all = rbind(p_df, t_df, k_df) %>%
mutate(power_color = case_when(power <= 20 ~ 1,
power > 20 ~ 0))
all_df %>%
group_by(text, language) %>%
summarize(mean_vot = mean(vot),
sd_vot = sd(vot),
min_vot = min(vot),
max_vot = max(vot))
plot_df_all %>%
ggplot(aes(x = as.factor(samples), y = mean, color = as.factor(power_color))) +
geom_pointrange(aes(ymin = min_mean, ymax = max_mean)) +
facet_wrap(~segment) + ggtitle("Spanish VOT per segment by L1 speakers")
