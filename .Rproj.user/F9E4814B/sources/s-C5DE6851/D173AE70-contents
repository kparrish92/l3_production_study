
# Source libs -----------------------------------------------------------------
source(here::here("scripts", "00_libs.R"))
# -----------------------------------------------------------------------------


all_data <-read.csv(here("sim_data", "tidy", "perception", "all_data.csv"))

# check df to ensure proper sim 
view(all_data)

# make step a character vector 

all_data$step = as.character(all_data$step)

bayesian_char = stan_glmer(response ~ language*step + (1 | participant), data = all_data, family = "binomial") 

bayesian_char %>%   
  write_rds(here("sim_data", "models", "perception_models", "perception_step_char_model.RDS"))
 
bayesian <- readRDS(here("sim_data", "models", "perception_models", "perception_step_char_model.RDS"))

glimpse(all_data)

modeldf = fixef(bayesian) %>% 
  as.data.frame(row.names = NULL)

setDT(modeldf, keep.rownames = TRUE)

modeldf_long <- modeldf %>% 
  pivot_wider(names_from = rn, values_from = ".")


# english steps 
english_steps = c(logistic(modeldf_long$`(Intercept)`),
                  logistic(modeldf_long$`(Intercept)` + modeldf_long$step2), 
                  logistic(modeldf_long$`(Intercept)` + modeldf_long$step2 + modeldf_long$step3),
                  logistic(modeldf_long$`(Intercept)` + modeldf_long$step2 + modeldf_long$step3
                           + modeldf_long$step4),
                  logistic(modeldf_long$`(Intercept)` + modeldf_long$step2 + modeldf_long$step3
                           + modeldf_long$step4 + modeldf_long$step5),
                  logistic(modeldf_long$`(Intercept)` + modeldf_long$step2 + modeldf_long$step3
                           + modeldf_long$step4 + modeldf_long$step5 + modeldf_long$step6),
                  logistic(modeldf_long$`(Intercept)` + modeldf_long$step2 + modeldf_long$step3
                           + modeldf_long$step4 + modeldf_long$step5 + modeldf_long$step6
                           + modeldf_long$step7))

# spanish steps 
spanish_steps = c(logistic(modeldf_long$`(Intercept)` + modeldf_long$languagespanish),
                  logistic(modeldf_long$`(Intercept)` + modeldf_long$languagespanish
                           + modeldf_long$`languagespanish:step2`),
                  logistic(modeldf_long$`(Intercept)` + modeldf_long$languagespanish
                           + modeldf_long$`languagespanish:step2` 
                           + modeldf_long$`languagespanish:step3`),
                  logistic(modeldf_long$`(Intercept)` + modeldf_long$languagespanish
                           + modeldf_long$`languagespanish:step2` 
                           + modeldf_long$`languagespanish:step3`
                           + modeldf_long$`languagespanish:step4`),
                  logistic(modeldf_long$`(Intercept)` + modeldf_long$languagespanish
                           + modeldf_long$`languagespanish:step2` 
                           + modeldf_long$`languagespanish:step3`
                           + modeldf_long$`languagespanish:step4`
                           + modeldf_long$`languagespanish:step5`),
                  logistic(modeldf_long$`(Intercept)` + modeldf_long$languagespanish
                           + modeldf_long$`languagespanish:step2` 
                           + modeldf_long$`languagespanish:step3`
                           + modeldf_long$`languagespanish:step4`
                           + modeldf_long$`languagespanish:step5`
                           + modeldf_long$`languagespanish:step6`),
                  logistic(modeldf_long$`(Intercept)` + modeldf_long$languagespanish
                           + modeldf_long$`languagespanish:step2` 
                           + modeldf_long$`languagespanish:step3`
                           + modeldf_long$`languagespanish:step4`
                           + modeldf_long$`languagespanish:step5`
                           + modeldf_long$`languagespanish:step6`
                           + modeldf_long$`languagespanish:step7`))

# french steps 
french_steps = c(logistic(modeldf_long$`(Intercept)` + modeldf_long$languagefrench),
                 logistic(modeldf_long$`(Intercept)` + modeldf_long$languagefrench
                          + modeldf_long$`languagefrench:step2`),
                 logistic(modeldf_long$`(Intercept)` + modeldf_long$languagefrench
                          + modeldf_long$`languagefrench:step2` 
                          + modeldf_long$`languagefrench:step3`),
                 logistic(modeldf_long$`(Intercept)` + modeldf_long$languagefrench
                          + modeldf_long$`languagefrench:step2` 
                          + modeldf_long$`languagefrench:step3`
                          + modeldf_long$`languagefrench:step4`),
                 logistic(modeldf_long$`(Intercept)` + modeldf_long$languagefrench
                          + modeldf_long$`languagefrench:step2` 
                          + modeldf_long$`languagefrench:step3`
                          + modeldf_long$`languagefrench:step4`
                          + modeldf_long$`languagefrench:step5`),
                 logistic(modeldf_long$`(Intercept)` + modeldf_long$languagefrench
                          + modeldf_long$`languagefrench:step2` 
                          + modeldf_long$`languagefrench:step3`
                          + modeldf_long$`languagefrench:step4`
                          + modeldf_long$`languagefrench:step5`
                          + modeldf_long$`languagefrench:step6`),
                 logistic(modeldf_long$`(Intercept)` + modeldf_long$languagefrench
                          + modeldf_long$`languagefrench:step2` 
                          + modeldf_long$`languagefrench:step3`
                          + modeldf_long$`languagefrench:step4`
                          + modeldf_long$`languagefrench:step5`
                          + modeldf_long$`languagefrench:step6`
                          + modeldf_long$`languagefrench:step7`))

# hungarian steps 
hungarian_steps = c(logistic(modeldf_long$`(Intercept)` + modeldf_long$languagehungarian),
                    logistic(modeldf_long$`(Intercept)` + modeldf_long$languagehungarian
                             + modeldf_long$`languagehungarian:step2`),
                    logistic(modeldf_long$`(Intercept)` + modeldf_long$languagehungarian
                             + modeldf_long$`languagehungarian:step2` 
                             + modeldf_long$`languagehungarian:step3`),
                    logistic(modeldf_long$`(Intercept)` + modeldf_long$languagehungarian
                             + modeldf_long$`languagehungarian:step2` 
                             + modeldf_long$`languagehungarian:step3`
                             + modeldf_long$`languagehungarian:step4`),
                    logistic(modeldf_long$`(Intercept)` + modeldf_long$languagehungarian
                             + modeldf_long$`languagehungarian:step2` 
                             + modeldf_long$`languagehungarian:step3`
                             + modeldf_long$`languagehungarian:step4`
                             + modeldf_long$`languagehungarian:step5`),
                    logistic(modeldf_long$`(Intercept)` + modeldf_long$languagehungarian
                             + modeldf_long$`languagehungarian:step2` 
                             + modeldf_long$`languagehungarian:step3`
                             + modeldf_long$`languagehungarian:step4`
                             + modeldf_long$`languagehungarian:step5`
                             + modeldf_long$`languagehungarian:step6`),
                    logistic(modeldf_long$`(Intercept)` + modeldf_long$languagehungarian
                             + modeldf_long$`languagehungarian:step2` 
                             + modeldf_long$`languagehungarian:step3`
                             + modeldf_long$`languagehungarian:step4`
                             + modeldf_long$`languagehungarian:step5`
                             + modeldf_long$`languagehungarian:step6`
                             + modeldf_long$`languagehungarian:step7`))

# german steps 
german_steps = c(logistic(modeldf_long$`(Intercept)` + modeldf_long$languagegerman),
                 logistic(modeldf_long$`(Intercept)` + modeldf_long$languagegerman
                          + modeldf_long$`languagegerman:step2`),
                 logistic(modeldf_long$`(Intercept)` + modeldf_long$languagegerman
                          + modeldf_long$`languagegerman:step2` 
                          + modeldf_long$`languagegerman:step3`),
                 logistic(modeldf_long$`(Intercept)` + modeldf_long$languagegerman
                          + modeldf_long$`languagegerman:step2` 
                          + modeldf_long$`languagegerman:step3`
                          + modeldf_long$`languagegerman:step4`),
                 logistic(modeldf_long$`(Intercept)` + modeldf_long$languagegerman
                          + modeldf_long$`languagegerman:step2` 
                          + modeldf_long$`languagegerman:step3`
                          + modeldf_long$`languagegerman:step4`
                          + modeldf_long$`languagegerman:step5`),
                 logistic(modeldf_long$`(Intercept)` + modeldf_long$languagegerman
                          + modeldf_long$`languagegerman:step2` 
                          + modeldf_long$`languagegerman:step3`
                          + modeldf_long$`languagegerman:step4`
                          + modeldf_long$`languagegerman:step5`
                          + modeldf_long$`languagegerman:step6`),
                 logistic(modeldf_long$`(Intercept)` + modeldf_long$languagegerman
                          + modeldf_long$`languagegerman:step2` 
                          + modeldf_long$`languagegerman:step3`
                          + modeldf_long$`languagegerman:step4`
                          + modeldf_long$`languagegerman:step5`
                          + modeldf_long$`languagegerman:step6`
                          + modeldf_long$`languagegerman:step7`))

prob_space_df = data.frame(english_steps, spanish_steps, french_steps, hungarian_steps, german_steps)

#english_steps spanish_steps french_steps hungarian_steps
#1     0.3125461   0.070780000  0.058065013    0.0645552349
#2     0.5419522   0.058283901  0.042559927    0.0367377601
#3     0.7795665   0.069076276  0.082213168    0.0571062027
#4     0.9576392   0.031197208  0.057266887    0.0468478109
#5     0.9947176   0.021578759  0.023658090    0.0258785781
#6     0.9996302   0.014608267  0.021307923    0.0125944812
#7     0.9999934   0.001714923  0.003249119    0.0001313214
#german_steps
#1  0.053674326
#2  0.068210809
#3  0.118430744
#4  0.090841326
#5  0.061125037
#6  0.029052134
#7  0.003617521

view(prob_space_df)


all_resp <- all_data %>% 
  group_by(step, language) %>% 
  summarise(response = sum(response)/300)

all_resp %>% 
  pivot_wider(names_from = language, values_from = response) 

#step  english french german hungarian spanish
#<chr>   <dbl>  <dbl>  <dbl>     <dbl>   <dbl>
# 1       0.313  0.15   0.263     0.137  0.0367
# 2       0.633  0.443  0.343     0.297  0.257 
# 3       0.583  0.36   0.273     0.483  0.377 
# 4       0.64   0.537  0.497     0.413  0.48  
# 5       0.84   0.543  0.71      0.473  0.59  
# 6       0.87   0.777  0.68      0.75   0.673 
# 7       0.927  0.76   0.75      0.773  0.763 




#(Intercept)         languagefrench         languagegerman 
#-1.1899642             -1.3445651             -0.9990423 
#languagehungarian        languagespanish                   step 
#-0.6934799             -1.2745855              0.5423421 
#languagefrench:step    languagegerman:step languagehungarian:step 
#-0.2378322             -0.3415509             -0.4518964 
#languagespanish:step 
#-0.2412413 

### English bda 

bayesian = stan_glmer(response ~ step + (1 | participant), data = e, family = "binomial") 

english_bda <- bayesian %>% 
  as.data.frame()
hdi(english_bda$step)
hdi(english_bda$`(Intercept)`)

logistic(fix_ef_eng$.[1]) # intercept 
logistic(fix_ef_eng$.[1] + fix_ef_eng$.[2]) # step 1 
logistic(fix_ef_eng$.[1] + fix_ef_eng$.[2]*2) # step 2
logistic(fix_ef_eng$.[1] + fix_ef_eng$.[2]*3) # step 3 
logistic(fix_ef_eng$.[1] + fix_ef_eng$.[2]*4) # step 4
logistic(fix_ef_eng$.[1] + fix_ef_eng$.[2]*5) # step 5
logistic(fix_ef_eng$.[1] + fix_ef_eng$.[2]*6) # step 6 
logistic(fix_ef_eng$.[1] + fix_ef_eng$.[2]*7) # step 7

fix_ef_eng <- fixef(bayesian) %>% 
  as.data.frame()


### Spanish bda 

bayesian_s = stan_glmer(response ~ step + (1 | participant), data = s, family = "binomial")


fix_ef_sp <-  fixef(bayesian_s) %>% 
  as.data.frame()

logistic(fix_ef_sp$.[1]) # intercept 
logistic(fix_ef_sp$.[1] + fix_ef_sp$.[2]) # step 1 
logistic(fix_ef_sp$.[1] + fix_ef_sp$.[2]*2) # step 2
logistic(fix_ef_sp$.[1] + fix_ef_sp$.[2]*3) # step 3 
logistic(fix_ef_sp$.[1] + fix_ef_sp$.[2]*4) # step 4
logistic(fix_ef_sp$.[1] + fix_ef_sp$.[2]*5) # step 5
logistic(fix_ef_sp$.[1] + fix_ef_sp$.[2]*6) # step 6 
logistic(fix_ef_sp$.[1] + fix_ef_sp$.[2]*7) # step 7
