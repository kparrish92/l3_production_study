## add title and descr

# desc 

vowels <- read.csv("sim_data/tidy/vowels.csv")


vowel_desc = vowels %>% 
  group_by(vowel, language) %>% 
  summarise(F1 = mean(f1), F1_sd = sd(f1), F2 = mean(f2), F2_sd = sd(f2), n = n())


######################## 
# f1 model 
fake_model_bayesf1 <- readRDS("sim_data/models/fake_model_bayes_vowelsf1.rds")
fake_model_postf1 <- as_tibble(fake_model_bayesf1)

colnames(fake_model_postf1)[1] <- "intercept"

# df to calculate ROPE 
rope_dff1 = fake_model_postf1 %>% 
  dplyr::select("languagel2:vowele",
                "languagel1:vowele",
                "languagel2:voweli",
                "languagel1:voweli",
                "languagel2:vowelo",
                "languagel1:vowelo",
                "languagel2:vowelu",) %>% 
  pivot_longer(cols = everything(), names_to = "parameter", 
               values_to = "estimate") 

rope = sd(rope_dff1$estimate)*.5


# plot posterier 

fake_model_postf1 %>% 
  dplyr::select("languagel2:vowele",
                "languagel1:vowele",
                "languagel2:voweli",
                "languagel1:voweli",
                "languagel2:vowelo",
                "languagel1:vowelo",
                "languagel2:vowelu",
                "languagel1:vowelu") %>% 
  rename(e_l2 = "languagel2:vowele",
         e_l1 = "languagel1:vowele",
         i_l2 = "languagel2:voweli",
         i_l1 = "languagel1:voweli",
         o_l2 = "languagel2:vowelo",
         o_l1 = "languagel1:vowelo",
         u_l2 = "languagel2:vowelu",
         u_l1 = "languagel1:vowelu") %>% 
  pivot_longer(cols = everything(), names_to = "parameter", 
               values_to = "estimate") %>% 
  separate(parameter, into = c("vowel", "language"), sep = "_") %>% 
  ggplot(., aes(x = estimate, y = vowel, color = language)) + 
  geom_vline(xintercept = 0, lty = 3) +
  tidybayes::stat_halfeye(pch = 21, point_fill = "white", point_size = 3, 
                          .width = c(0.66, 0.95)) + 
  labs(title = "Bayesian estimates of F1 with L3 as the reference level", 
       subtitle = "Forest plot of population estimates", 
       caption = "Posterior means +/- 66% and 95% CI ROPE = +/- 33 Hz", 
       y = "Parameter", x = "Estimate") + geom_vline(xintercept = c(-1*rope, rope), 
                                                     linetype = "dashed") + ggsave("sim_data/plots/f1_forest.png")

#-------------------------------------------------------------------------------

# f2 model 
fake_model_bf2 <- readRDS("sim_data/models/fake_model_bayes_vowelsf2.rds")
fake_model_postf2 <- as.data.frame(fake_model_bf2) %>% 
  write.csv("sim_data/tidy/fake_model_postf2.csv")
  

colnames(fake_model_postf2)[1] <- "intercept"

# df to calculate ROPE 
rope_dff2 = fake_model_postf2 %>% 
  dplyr::select("languagel2:vowele",
                "languagel1:vowele",
                "languagel2:voweli",
                "languagel1:voweli",
                "languagel2:vowelo",
                "languagel1:vowelo",
                "languagel2:vowelu",) %>% 
  pivot_longer(cols = everything(), names_to = "parameter", 
               values_to = "estimate") 

rope = sd(rope_dff2$estimate)*.5


# plot posterier 

fake_model_postf2 %>% 
  dplyr::select("languagel2:vowele",
                "languagel1:vowele",
                "languagel2:voweli",
                "languagel1:voweli",
                "languagel2:vowelo",
                "languagel1:vowelo",
                "languagel2:vowelu",
                "languagel1:vowelu") %>% 
  rename(e_l2 = "languagel2:vowele",
         e_l1 = "languagel1:vowele",
         i_l2 = "languagel2:voweli",
         i_l1 = "languagel1:voweli",
         o_l2 = "languagel2:vowelo",
         o_l1 = "languagel1:vowelo",
         u_l2 = "languagel2:vowelu",
         u_l1 = "languagel1:vowelu") %>% 
  pivot_longer(cols = everything(), names_to = "parameter", 
               values_to = "estimate") %>% 
  separate(parameter, into = c("vowel", "language"), sep = "_") %>% 
  ggplot(., aes(x = estimate, y = vowel, color = language)) + geom_vline(xintercept = 0, lty = 3) +
  tidybayes::stat_halfeye(pch = 21, point_fill = "white", point_size = 3, 
                          .width = c(0.66, 0.95)) + 
  labs(title = "Bayesian estimates of F2 with L3 as the reference level", 
       subtitle = "Forest plot of population estimates", 
       caption = "Posterior means +/- 66% and 95% CI ROPE = +/- 39.9 Hz", 
       y = "Parameter", x = "Estimate") + geom_vline(xintercept = c(-1*rope, rope), 
                                                     linetype = "dashed") + ggsave("sim_data/plots/f2_forest.png")
                                                       
# -------------
